name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create proper macOS icon (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p icon.iconset
          sips -z 16 16 public/logo.png --out icon.iconset/icon_16x16.png
          sips -z 32 32 public/logo.png --out icon.iconset/icon_16x16@2x.png
          sips -z 32 32 public/logo.png --out icon.iconset/icon_32x32.png
          sips -z 64 64 public/logo.png --out icon.iconset/icon_32x32@2x.png
          sips -z 128 128 public/logo.png --out icon.iconset/icon_128x128.png
          sips -z 256 256 public/logo.png --out icon.iconset/icon_128x128@2x.png
          sips -z 256 256 public/logo.png --out icon.iconset/icon_256x256.png
          sips -z 512 512 public/logo.png --out icon.iconset/icon_256x256@2x.png
          sips -z 512 512 public/logo.png --out icon.iconset/icon_512x512.png
          sips -z 1024 1024 public/logo.png --out icon.iconset/icon_512x512@2x.png
          iconutil -c icns icon.iconset
          mv icon.icns public/logo.icns
      
      - name: Build Next.js app
        run: npm run build
      
      - name: Build Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run dist-win
      
      - name: Build Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run dist-mac
      
      - name: Build Electron app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run dist-linux
      
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: |
            dist/*.exe
            dist/*.msi
      
      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: |
            dist/*.dmg
            dist/*.zip
      
      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-installer
          path: |
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-installer/*
            macos-installer/*
            linux-installer/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
